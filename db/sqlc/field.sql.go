// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.24.0
// source: field.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const fetchFieldNameAndTypeByFieldID = `-- name: FetchFieldNameAndTypeByFieldID :one
SELECT
    encrypted_data.field_name,
    encrypted_data.field_type
FROM encrypted_data
WHERE encrypted_data.id = $1
`

type FetchFieldNameAndTypeByFieldIDRow struct {
	FieldName string `json:"field_name"`
	FieldType string `json:"field_type"`
}

func (q *Queries) FetchFieldNameAndTypeByFieldID(ctx context.Context, id uuid.UUID) (FetchFieldNameAndTypeByFieldIDRow, error) {
	row := q.db.QueryRowContext(ctx, fetchFieldNameAndTypeByFieldID, id)
	var i FetchFieldNameAndTypeByFieldIDRow
	err := row.Scan(&i.FieldName, &i.FieldType)
	return i, err
}
