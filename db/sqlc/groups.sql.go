// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: groups.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/lib/pq"
)

const addMemberToGroup = `-- name: AddMemberToGroup :exec
UPDATE groups 
SET members = array_append(members, $3)
WHERE id = $1 AND created_by = $2
RETURNING id
`

type AddMemberToGroupParams struct {
	ID          uuid.UUID     `json:"id"`
	CreatedBy   uuid.NullUUID `json:"created_by"`
	ArrayAppend interface{}   `json:"array_append"`
}

func (q *Queries) AddMemberToGroup(ctx context.Context, arg AddMemberToGroupParams) error {
	_, err := q.db.ExecContext(ctx, addMemberToGroup, arg.ID, arg.CreatedBy, arg.ArrayAppend)
	return err
}

const createGroup = `-- name: CreateGroup :one
INSERT INTO groups (name, members, created_by)
VALUES ($1, $2, $3)
RETURNING id
`

type CreateGroupParams struct {
	Name      string        `json:"name"`
	Members   []uuid.UUID   `json:"members"`
	CreatedBy uuid.NullUUID `json:"created_by"`
}

func (q *Queries) CreateGroup(ctx context.Context, arg CreateGroupParams) (uuid.UUID, error) {
	row := q.db.QueryRowContext(ctx, createGroup, arg.Name, pq.Array(arg.Members), arg.CreatedBy)
	var id uuid.UUID
	err := row.Scan(&id)
	return id, err
}
