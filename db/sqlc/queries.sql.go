// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.23.0
// source: queries.sql

package db

import (
	"context"

	"github.com/google/uuid"
)

const getCredentialIDsByUserID = `-- name: GetCredentialIDsByUserID :many
SELECT credential_id FROM access_list WHERE user_id = $1
`

func (q *Queries) GetCredentialIDsByUserID(ctx context.Context, userID uuid.NullUUID) ([]uuid.NullUUID, error) {
	rows, err := q.db.QueryContext(ctx, getCredentialIDsByUserID, userID)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	items := []uuid.NullUUID{}
	for rows.Next() {
		var credential_id uuid.NullUUID
		if err := rows.Scan(&credential_id); err != nil {
			return nil, err
		}
		items = append(items, credential_id)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
